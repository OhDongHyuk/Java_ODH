상속과 다형성(매우 중요!)

1. 상속이란?
접근제어자와 상관없이 일단 다 물려 받음
접근제어자에 따라 일부 사용이 불가능

2. 클래스의 상속
클래스 A(부모) -> 클래스 B(자식)
*B는 A이다라고 표현 가능할 때 상속!!
포유류는 사람이다.(X) => 상속 불가
스마트폰은 카메라이다.(X)
스마트폰 : 클래스
- 폰 : 부모 클래스(is a 관계)
- 카메라 : 멤버변수(Has a 관계)
스마트폰은 카메라를 가지고 있다.(O)
스마트폰은 폰이다.(O)
폰은 스마트폰이다.(X)

3. 클래스의 상속
상속은 멤버변수와 메서드를 편하게 사용하기 위해 받는 게 아니라 B is a A가 성립될때만 해야 함.
클래스 상속은 단일 상속만 가능(부모는 오직 한개)

4. 접근 제어자 protected
부모 클래스에서 자식 클래스에서도 사용하지 못하게 할 때는 private
=> private 멤버변수와 메소드도 물려는 받음, 그러나 사용은 못 함.

5. super super()
super
- 부모 클래스 객체의 주소를 알고있는 예약어.
super()
- 부모 클래스의 생성자
- 자식 클래스의 생성자에서 첫 줄에 씀

6. 메소드 오버라이딩
부모 클래스에 있는 메소드를 재정의 하는 것
@override
 - 오버라이딩한 메소드임을 알려주고, 문법에 맞는지 체크 
리턴타입, 메소드명, 매개변수는 수정하면 안됨.
접근제어자를 넓은 범위로 넓히는 건 가능. 좁히는건 불가능
부모클래스의 메소드 A가 public이면 자식클래스에서 오버라이딩할 때
public만 가능. private, protected, 디폴트로 변경 불가능.

7. 클래스의 형변환(매우매우 중요!!!!!)
변수의 타입(자료형)이 변환
int -> double        : 자동 
double -> int        : 강제

클래스의 형변환 : 상속관계인 부모 자식 객체에서만 가능
String -> SmartPhone(X)
Phone -> SmartPhone(조건부로 가능)
Smart Phone -> Phone(가능)

8. 업 캐스팅 : 묵시적 클래스 형변환
- 자식 클래스의 객체를 부모 클래스의 객체로 변환
  자동으로 변환됨
Phone p = new SmartPhone(); 가능

9. 다운 캐스팅
- 부모 클래스의 객체를 자식 클래스이 객체로 형변환

10. instanceof
클래스의 형변환이 가능한지 확인하는 연산자
if(a instanceof b) {
}

11. 다형성
-매개변수의 다형성 : 메소드의 매개변수로 부모클래스의 객체가 오면 매개변수에 자식 클래스의
                          객체를 이용할 수 있다.


-포함 다형성 ;


-재정의 다형성 : 상속된 각 클래스마다 오버라이딩을 이용하여 메소드를 재정의할 수 있다







































