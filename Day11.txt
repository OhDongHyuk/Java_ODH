1. 배열

자료형이 같은 변수들을 모아 놓은 것.

Student 클래스가 있고, 10명의 학생 정보를 저장하도록 객체를 생성해보세요.

Student std1, std2,...., std10;
std1.
std2.
std10.    <= 이렇게 하면 불편함, 그래서 나온것이 배열

사용하는 이유?

- 관리가 편하다. 변수 100개 관리하는 것보다 크기가 100인 배열 1개를 관리하는게 편하다.
- 반복문을 이용하여 코드를 효율적으로 작업할 수 있다.
- 연속된 공간에 할당하기 때문에 탐색이 빠르다.

2. 배열 선언과 초기화

배열 선언
- 자료형[ ] 배열명, 변수명2 = new 자료형[개수]; 이건 [ ] 뒤로 배열   참조형 변수기 때문에 new
- 자료형 배열명[ ], 변수명4 = new 자료형[개수]; [ ] 앞만 배열
차이는 변수명2 : 배열
         변수명4 : 변수

배열 초기화 (잘 사용 안함)
- 다양한 방법이 있는데 잘 사용 안함.
- 배열을 생성하면 따로 초기화를 하지 않아도 자료형에 맞게 초기화됨(멤버변수 처럼)

int num; //지역변수 : 자동으로 초기화가 안된다
int [ ] arr = new int[3] //배열 : 자동으로 기본값으로 초기화

3.배열 사용하기

배열명 [번지(정수)]를 이용하여 변수처럼 사용
번지는 0번지부터 (배열의 크기 - 1번지) 까지 사용 가능
잘못된 번지를 입력하면 ArrayIndexOutOfBound 예외 발생

4.배열의 길이

배열명.length로 배열의 크기를 알 수 있음.

배열의 크기는 생성된 배열의 

5.배열의 복사하기

반복문을 이용하여 직접 복사
System.arraycopy(src, srcPos, dest, destPos, length)를 이용하여 복사(얇은 복사)

6.향상된 for문
for(자료형 변수명 : 배열명) {

}

- 배열을 전체 탐색하는 경우 사용
- 값을 조회하는 경우(수정하는 졍우는 사용하지 않음)